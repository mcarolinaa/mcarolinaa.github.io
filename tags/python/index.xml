<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Data thoughts</title>
    <link>http://mcarolinaa.github.io/tags/python/</link>
    <description>Recent content in python on Data thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://mcarolinaa.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Abre arquivo .nc e faz máscara/clip usando shapefile</title>
      <link>http://mcarolinaa.github.io/posts/arquivo_nc_xarray/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/arquivo_nc_xarray/</guid>
      <description>Manipulação de arquivo .nc usando shapefile   Arquivo .nc
  Libraries
  Abre arquivo .nc e cria máscara e clip usando arquivo .shp
  Arquivo .nc
Os arquivos .nc ou NetCDF (Network Common Data Form) files são estruturas usadas para armazenadas grandes quantidades de informação.
O formato usado é o array oriented, e o tipo ou formato é o chamado scientific binary data, e considerado machine-independent.</description>
    </item>
    
    <item>
      <title>Entendendo os dados de um raster - 1</title>
      <link>http://mcarolinaa.github.io/posts/entendendo_raster_1/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/entendendo_raster_1/</guid>
      <description>Características básicas de um arquivo raster e como entendê-las Passos para isso:
  Ler um raster
  Entendendo a array dos dados
  Montando um raster
  Ler um raster
Operações com e entre rasters são bem comuns e importantes nas análises espaciais.
No python, o uso do GDAL, numpy e pandas já permitem a realização de muitas dessas operações.
Mesmo sendo mais verboso, a vantagem aqui é compreender como a maior parte dos pacotes de GIS fornecem informações básicas, como resolução espacial, número de pixels e outros.</description>
    </item>
    
    <item>
      <title>Acessar arquivos S3 via python</title>
      <link>http://mcarolinaa.github.io/posts/acessar_s3/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/acessar_s3/</guid>
      <description>Acessando arquivos no Amazon S3 Objetivo: Acessar arquivos contidos no serviço de armazenamento da Amazon Web Services via python.
Sobre o serviço:
https://aws.amazon.com/pt/s3/
A rotina abaixo contempla uma situação de identificar e avaliar alguns arquivos que você possa ter no S3.
Considera-se que as credenciais de acesso já estejam corretamente setadas na sua máquina.
from osgeo import gdal import numpy as np import pandas as pd import matplotlib.pyplot as plt import boto3 import io 1.</description>
    </item>
    
    <item>
      <title>Acessar arquivos via Athena e python</title>
      <link>http://mcarolinaa.github.io/posts/acessar_athena/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/acessar_athena/</guid>
      <description>Rodando queries no Amazon Athena por usando python O Amazon Athena é um serviço de queries que facilita o acesso de dados no S3 por meio do uso do SQL.
É interessante ler mais sobre as estruturas de serviços do Amazon e como elas se conectam para que fique um pouco mais claro.
Boto3 é um grande aliado nisso para quem usará python para pegar/analisar os dados. A sua documentação é bem completa e ajuda bastante no entendimento:</description>
    </item>
    
    <item>
      <title>Interpolação com GDAL e python - 1</title>
      <link>http://mcarolinaa.github.io/posts/interpolation_gdal_1/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/interpolation_gdal_1/</guid>
      <description>Manipulações de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python. A API para python pode ser consultada aqui:</description>
    </item>
    
    <item>
      <title>Interpolação com GDAL e python - 2</title>
      <link>http://mcarolinaa.github.io/posts/interpolation_gdal_2/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/interpolation_gdal_2/</guid>
      <description>Manipulações de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python. A API para python pode ser consultada aqui:</description>
    </item>
    
    <item>
      <title>Interpolação com GDAL e python - 3</title>
      <link>http://mcarolinaa.github.io/posts/interpolation_gdal_3/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/interpolation_gdal_3/</guid>
      <description>Manipulações de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python. A API para python pode ser consultada aqui:</description>
    </item>
    
    <item>
      <title>Interpolação com GDAL e python - 4</title>
      <link>http://mcarolinaa.github.io/posts/interpolation_gdal_4/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/interpolation_gdal_4/</guid>
      <description>Manipulações de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python. A API para python pode ser consultada aqui:</description>
    </item>
    
    <item>
      <title>Operações com raster GDAL e python - 1</title>
      <link>http://mcarolinaa.github.io/posts/rasters_gdal_1/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/rasters_gdal_1/</guid>
      <description>Manipulações básicas de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python.</description>
    </item>
    
    <item>
      <title>Operações com raster GDAL e python - 2</title>
      <link>http://mcarolinaa.github.io/posts/rasters_gdal_2/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/rasters_gdal_2/</guid>
      <description>Manipulações básicas de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python.</description>
    </item>
    
    <item>
      <title>Operações com raster GDAL e python - 3</title>
      <link>http://mcarolinaa.github.io/posts/rasters_gdal_3/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/rasters_gdal_3/</guid>
      <description>Manipulações básicas de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python.</description>
    </item>
    
    <item>
      <title>Operações com raster GDAL e python - 4</title>
      <link>http://mcarolinaa.github.io/posts/rasters_gdal_4/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/rasters_gdal_4/</guid>
      <description>Manipulações básicas de arquivos raster usando GDAL e python O GDAL é uma translator library para dados vetoriais e rasteriais, com modelos próprios para trabalhar esses dados.
Uma grande diversidade de pacotes e libraries em diversas linguagens são baseados no GDAL. Acredito que vale muito a pena saber usá-la até para entender melhor a estrutura dos dados no contexto de GIS.
o GDAL tem API para diversas linguagens, incluindo o python.</description>
    </item>
    
    <item>
      <title>Environments python</title>
      <link>http://mcarolinaa.github.io/posts/criar_envs/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://mcarolinaa.github.io/posts/criar_envs/</guid>
      <description>Criar e manejar environments python Objetivo: reunir e resumir principais comandos e passos utilizandos na criação e principais operações de um novo environment usando pyhton.
Duas maneiras são abordadas aqui: por meio do conda e do pip.
Conda e pip, apesar de aqui estarem sendo usados como exemplos para o mesmo resultado final, não são ferramentas iguais.
Para entender um pouco melhor o que cada um deles representa, alguns materiais como esse https://www.</description>
    </item>
    
  </channel>
</rss>
